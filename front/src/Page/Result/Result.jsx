import React, { useState, useEffect } from "react";
import { motion } from "framer-motion";
import { useSelector } from "react-redux";
import { useNavigate } from "react-router-dom"; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ö—É–∫ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó

export default function Result() {
  const [gptResponse, setGptResponse] = useState(null);

  const someone =
    "–£ —è–∫—ñ–π —Å—Ñ–µ—Ä—ñ –≤–∏ —Ö–æ—á–µ—Ç–µ —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Å–≤—ñ–π —Å—Ç–∞—Ä—Ç–∞–ø? –Ø–∫—ñ —É –≤–∞—Å —î –Ω–∞–≤–∏—á–∫–∏ —Ç–∞ –¥–æ—Å–≤—ñ–¥? –Ø–∫–∏–π —Ä—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É –≤–∞–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏–π? –Ø–∫—ñ —É –≤–∞—Å —ñ–Ω—Ç–µ—Ä–µ—Å–∏ —Ç–∞ –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç—ñ? –í–∏ –≥–æ—Ç–æ–≤—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ —á–∏ –≤—ñ–¥–¥–∞—î—Ç–µ –ø–µ—Ä–µ–≤–∞–≥—É –∫–æ–º–∞–Ω–¥–Ω—ñ–π —Ä–æ–±–æ—Ç—ñ? –Ø–∫—É –ø—Ä–æ–±–ª–µ–º—É –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏—Ä—ñ—à–∏—Ç–∏? –î–µ –≤–∏ –ø–ª–∞–Ω—É—î—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç–∏ —Å—Ç–∞—Ä—Ç–∞–ø ‚Äì —É —Å–≤–æ—î–º—É —Ä–µ–≥—ñ–æ–Ω—ñ —á–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ? –°–∫—ñ–ª—å–∫–∏ —á–∞—Å—É –≤–∏ –≥–æ—Ç–æ–≤—ñ —ñ–Ω–≤–µ—Å—Ç—É–≤–∞—Ç–∏ —É —Å—Ç–∞—Ä—Ç–∞–ø? –Ø–∫–∏–π —É –≤–∞—Å —Ä—ñ–≤–µ–Ω—å –∑–Ω–∞–Ω—å –ø—Ä–æ –±—ñ–∑–Ω–µ—Å —Ç–∞ –ø—ñ–¥–ø—Ä–∏—î–º–Ω–∏—Ü—Ç–≤–æ? –Ø–∫–∞ –≤–∞—à–∞ —É–ª—é–±–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞?";

  const selectedAnswers = useSelector((state) => state.counter.selectedAnswers);

  const answersText = JSON.stringify(selectedAnswers);

  const navigate = useNavigate(); // —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ö—É–∫–∞ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó

  useEffect(() => {
    console.log(
      "üöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å —Å prompt:"
    );

    fetch("http://localhost:5000/api/question", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        prompt: `–≤–æ–ø—Ä–æ—Å—ã : ${someone} –∞ –æ—Ç –æ—Ç–≤–µ—Ç—ã ${answersText}. –°—É–¥—è –ø–æ —ç—Ç–∏–º –µ–≥–æ –æ—Ç–≤–µ—Ç–∞–º –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–π –¥–ª—è –Ω–µ–≥–æ —Ç–æ–ø 3 –ª—É—á—à–∏—Ö —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –Ω–µ–≥–æ. –í–∞–∂–Ω–æ: –Ω–∞–∑–æ–≤–∏ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –≤—Å—ë.`,
      }),
    })
      .then((response) => response.json())
      .then((data) => {
        console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
        setGptResponse(data?.content || "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ");
      })
      .catch((error) => console.error("‚ùå –û—à–∏–±–∫–∞:", error));
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
  const goToHome = () => {
    navigate("/");  // –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
  };

  return (
    <div className="h-screen flex flex-col items-center justify-center bg-gradient-to-br from-green-500 to-blue-600 text-white text-center px-4 py-6">
      <motion.div
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 1, type: "spring", stiffness: 100 }}
        className="bg-white p-8 rounded-lg shadow-2xl max-w-2xl w-full text-center"
      >
        <motion.h1
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 1, delay: 0.5 }}
          className="text-4xl font-extrabold mb-6 text-blue-600"
        >
          –¢–æ–ø 3 —Å—Ç–∞—Ä—Ç–∞–ø–∏ –¥–ª—è –≤–∞—Å
        </motion.h1>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 1, delay: 1 }}
          className="text-2xl font-semibold text-gray-800"
        >
          {gptResponse ? (
            gptResponse.split("\n").map((line, index) => (
              <p key={index} className="mt-2">
                {line}
              </p>
            ))
          ) : (
            <p className="text-lg text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
          )}
        </motion.div>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –≥–æ–ª–æ–≤–Ω—É */}
        <motion.button
          onClick={goToHome}
          whileHover={{ scale: 1.1 }}
          transition={{ duration: 0.3 }}
          className="mt-6 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full text-lg shadow-lg"
        >
          –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
        </motion.button>

        {!gptResponse && (
          <motion.div
            className="mt-6"
            animate={{ rotate: 360 }}
            transition={{ repeat: Infinity, duration: 2 }}
          >
            <div className="w-12 h-12 border-4 border-t-transparent border-blue-600 rounded-full animate-spin "></div>
          </motion.div>
        )}
      </motion.div>
    </div>
  );
}
